# Default values for alertmanager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

podDisruptionBudget:
  enabled: true
  minAvailable: 1

service:
  enabled: true
  annotations: {}
  type: ClusterIP
  port: 9093
  clusterPort: 9094
  loadBalancerIP: ""  # Assign ext IP when Service type is LoadBalancer
  loadBalancerSourceRanges: []  # Only allow access to loadBalancerIP from these IPs
  # if you want to force a specific nodePort. Must be use with service.type=NodePort
  # nodePort:

alertmanager:
  image:
    repository: prom/alertmanager
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.24.0"

imagePullSecrets: []
nameOverride: "alertmanager"
fullnameOverride: "alertmanager"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Annotations to be added to pod
podAnnotations: 
  prometheus.io/scrape: "true"
  prometheus.io/port: "9093"
  prometheus.io/path: "/metrics"

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

storage:
  path: /alertmanager

resources: 
  limits:
    cpu: 50m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

config:
  global:
    resolve_timeout: 5m
  route:
    receiver: alerttrap
    group_by: ['alertname']
    group_interval: 1m
    group_wait: 10s
    repeat_interval: 1m
    #routes:
    #  - match_re: 
    #      alertname: ^.*$
    #    receiver: alerttrap
  receivers:
    - name: alerttrap
      webhook_configs:
        - url: http://alerttrap:8081/api/v1/alerts
  inhibit_rules:
    - source_matchers: [severity="critical"]
      target_matchers: [severity="warning"]
      equal: ['alertname','host','node','namespace','pod','instance']
