apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "grafana.fullname" . }}
  labels:
    {{- include "grafana.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "grafana.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      labels:
        {{- include "grafana.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml ($.Values.grafana.imagePullSecrets | default . ) | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ $.Values.priorityClassName }}
      {{- end }}
      serviceAccountName: {{ include "grafana.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          {{- $image := coalesce .Values.grafana.image .Values.image }}
          image: "{{ default .Values.image.repository $image.repository }}:{{ default .Values.image.tag $image.tag }}"
          imagePullPolicy: {{ default .Values.image.pullPolicy $image.pullPolicy }}
          securityContext:
            {{- toYaml (.Values.grafana.securityContext | default .Values.securityContext) | nindent 12 }}
          resources:
            {{- toYaml (.Values.grafana.resources | default .Values.resources) | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "password"
            - name: GF_UNIFIED_ALERTING_ENABLED
              value: "false"
            - name: GF_ALERTING_ENABLED
              value: "true"
            - name: GF_RENDERING_SERVER_URL
              value: "http://renderer:8081/render"
            - name: GF_RENDERING_CALLBACK_URL
              value: "http://grafana:3000"
            - name: GF_RENDERING_RENDERER_TOKEN
              value: "eyJrIjoiQnZYS3U0SGtoVU43Z3FPNVhGbmpON3lBS2FTajJab2YiLCJuIjoicmVuZGVyZXIiLCJpZCI6MX0="
            #- name: GF_LOG_FILTERS
            #  value: "rendering:debug"
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
            - mountPath: /usr/share/grafana/conf/defaults.ini
              name: grafana-volume
              subPath: defaults.ini
            - mountPath: /usr/share/grafana/conf/ldap.toml
              name: grafana-volume
              subPath: ldap.toml
            - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              name: grafana-volume
              subPath: datasources.yaml
            - mountPath: /etc/grafana/provisioning/notifiers/notifiers.yaml
              name: grafana-volume
              subPath: notifiers.yaml
            - mountPath: /etc/grafana/provisioning/dashboards/providers.yaml
              name: grafana-volume
              subPath: providers.yaml
            {{- range $path, $_ :=  .Files.Glob  "dashboards/*" }}
            - mountPath: /var/lib/grafana/dashboards/{{ base $path }}
              name: {{ print "grafana-" (regexReplaceAll "[._]+" (base $path) "-") }}
              subPath: {{ base $path }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: {{ template "grafana.fullname" . }}-pvc
        - name: grafana-volume
          configMap:
            name: {{ template "grafana.fullname" . }}-cm
        {{- range $path, $_ :=  .Files.Glob  "dashboards/*" }}
        - name: {{ print "grafana-" (regexReplaceAll "[._]+" (base $path) "-") }}
          configMap:
            name: {{ print "grafana-" (regexReplaceAll "[._]+" (base $path) "-") "-cm" }}
        {{- end }}