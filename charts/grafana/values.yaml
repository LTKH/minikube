# Default values for grafana.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

grafana: {}

replicaCount: 1

image:
  repository: "grafana/grafana"
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "8.5.14"

imagePullSecrets: []
nameOverride: "grafana"
fullnameOverride: "grafana"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Annotations to be added to pod
podAnnotations: 
  prometheus.io/scrape: "true"
  prometheus.io/port: "3000"
  prometheus.io/path: "/metrics"

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 472
  seccompProfile:
    type: RuntimeDefault

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

livenessProbe:
  httpGet:
    path: /api/health
    port: 3000

readinessProbe:
  httpGet:
    path: /api/health
    port: 3000

resources: 
  limits:
    cpu: 50m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 128Mi

storage:
  size: 1Gi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  type: pvc
  enabled: false
  # storageClassName: default
  accessModes:
    - ReadWriteOnce
  size: 1Gi
  # annotations: {}
  finalizers:
    - kubernetes.io/pvc-protection
    
## Configure grafana datasources
## ref: http://docs.grafana.org/administration/provisioning/#datasources
##
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus (local)
        type: prometheus
        url: http://vmselect:8481/select/0/prometheus
        access: proxy
        isDefault: true
        editable: true
      - name: Loki (local)
        type: loki
        url: http://loki:3100
        access: proxy
        editable: true
        
## Configure notifiers
## ref: http://docs.grafana.org/administration/provisioning/#alert-notification-channels
##
notifiers: 
  notifiers.yaml:
    apiVersion: 1
    notifiers:
      - name: Alertmanager
        type: prometheus-alertmanager
        uid: notifier01
        settings:
          url: http://alertmanager:9093

## Configure grafana dashboard to import
## NOTE: To use dashboards you must also enable/configure dashboardProviders
## ref: https://grafana.com/dashboards
##
## dashboards per provider, use provider name as key.
##
dashboards:
  dashboards.yaml:
    apiVersion: 1
    providers:
      # <string> an unique provider name. Required
      - name: 'dashboards'
        # <int> Org id. Default to 1
        orgId: 1
        # <string> name of the dashboard folder.
        folder: 'Monitoring'
        # <string> folder UID. will be automatically generated if not specified
        folderUid: 'Monitoring'
        # <string> provider type. Default to 'file'
        type: file
        # <bool> disable dashboard deletion
        disableDeletion: true
        # <int> how often Grafana will scan for changed dashboards
        updateIntervalSeconds: 10
        # <bool> allow updating provisioned dashboards from the UI
        allowUiUpdates: false
        options:
          # <string, required> path to dashboard files on disk. Required when using the 'file' type
          path: /var/lib/grafana/dashboards
          # <bool> use folder names from filesystem to create folders in Grafana
          foldersFromFilesStructure: false
