apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "vmalert.fullname" . }}
  labels:
    {{- include "vmalert.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "vmalert.selectorLabels" . | nindent 6 }}
  serviceName: {{ template "vmalert.fullname" . }}-headless
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      labels:
        {{- include "vmalert.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ $.Values.priorityClassName }}
      {{- end }}
      serviceAccountName: {{ include "vmalert.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          {{- $image := coalesce .Values.vmalert.image .Values.image }}
          image: "{{ default .Values.image.repository $image.repository }}:{{ default .Values.image.tag $image.tag }}"
          imagePullPolicy: {{ default .Values.image.pullPolicy $image.pullPolicy }}
          securityContext:
            {{- toYaml (.Values.vmalert.securityContext | default .Values.securityContext) | nindent 12 }}
          resources:
            {{- toYaml (.Values.vmalert.resources | default .Values.resources) | nindent 12 }}
          args:
            - -rule=/config/*.yaml
            - -datasource.url={{ .Values.server.datasource.url }}
            {{- if or .Values.server.datasource.basicAuth.password .Values.server.datasource.basicAuth.username  }}
            - -datasource.basicAuth.password={{ .Values.server.datasource.basicAuth.password}}
            - -datasource.basicAuth.username={{ .Values.server.datasource.basicAuth.username}}
            {{- end }}
            {{- with .Values.server.datasource.bearer.token }}
            - -datasource.bearerToken={{ . }}
            {{- end }}
            {{- with .Values.server.datasource.bearer.tokenFile }}
            - -datasource.bearerTokenFile={{ . }}
            {{- end }}
            - -notifier.url={{ .Values.server.notifier.alertmanager.url }}
            - -remoteRead.url={{ .Values.server.remote.read.url }}
            {{- if or .Values.server.remote.read.basicAuth.password .Values.server.remote.read.basicAuth.username }}
            - -remoteRead.basicAuth.password={{ .Values.server.remote.read.basicAuth.password }}
            - -remoteRead.basicAuth.username={{ .Values.server.remote.read.basicAuth.username }}
            {{- end }}
            {{- with .Values.server.remote.read.bearer.token }}
            - -remoteRead.bearerToken={{ . }}
            {{- end }}
            {{- with .Values.server.remote.read.bearer.tokenFile }}
            - -remoteRead.bearerTokenFile={{ . }}
            {{- end }}
            - -remoteWrite.url={{ .Values.server.remote.write.url }}
             {{- if or .Values.server.remote.write.basicAuth.password .Values.server.remote.write.basicAuth.username  }}
            - -remoteWrite.basicAuth.password={{ .Values.server.remote.write.basicAuth.password }}
            - -remoteWrite.basicAuth.username={{ .Values.server.remote.write.basicAuth.username }}
            {{- end }}
            {{- with .Values.server.remote.write.bearer.token }}
            - -remoteWrite.bearerToken={{ . }}
            {{- end }}
            {{- with .Values.server.remote.write.bearer.tokenFile }}
            - -remoteWrite.bearerTokenFile={{ . }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          volumeMounts:
            - name: alerts-config
              mountPath: /config
            {{- range .Values.server.extraHostPathMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
            {{- with .Values.server.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: alerts-config
          configMap:
            name: {{ include "vmalert.configname" . }}
        {{- range .Values.server.extraHostPathMounts }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostPath }}
        {{- end }}
        {{- with .Values.server.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}